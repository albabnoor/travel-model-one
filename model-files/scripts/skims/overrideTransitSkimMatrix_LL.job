;
; Quick script to over-ride transit skim matrices, as an alternative to running the transit assignment/skimming process
;
; Reads transit skims from %SKIMS_SOURCE_DIR% (e.g. E:\Model2C-Share\Projects\2035_TM152_FBP_Plus_19\skims)
; Write updatesd skim into .\skims
;
; Uses 5 x 3 = 15 CTRAMP processes
;
*Cluster.EXE CTRAMP 2-16 Starthide Exit
DISTRIBUTE INTRASTEP=T MULTISTEP=T  

;token_skims_src = '%SKIMS_SOURCE_DIR%'
token_skims_src = 'F:\23791501\2015_TM152_STR_BA\' ; for your test, Alex

; time period loop
loop period = 1,5

  if (period = 1)   
     token_period   = 'ea'
  elseif (period = 2)
     token_period   = 'am'
  elseif (period = 3)
     token_period   = 'md'
  elseif (period = 4)
     token_period   = 'pm'
  elseif (period = 5)
     token_period   = 'ev'
  endif

  ; access/egress loop (walk/walk, auto/walk, walk/auto)
;  loop accegg = 1,3
  loop accegg = 1,1
   
    if (accegg = 1)         
      token_access = 'wlk'
      token_egress = 'wlk'
    elseif (accegg = 2)        
      token_access = 'drv'
      token_egress = 'wlk'
    elseif (accegg = 3)       
      token_access = 'wlk'
      token_egress = 'drv'
    endif

    counter = 3 * (period - 1) + accegg
    ; distribute the tasks
    DistributeMultistep processid = "ctramp", processnum = counter ;,  commpath = '%COMMPATH%'

      ; line haul loop
;      loop path = 1,6
      loop path = 1,1
        if (path = 1)
          token_path = 'com'
        elseif (path = 2)
          token_path = 'hvy'
        elseif (path = 3)
          token_path = 'exp'
        elseif (path = 4)
          token_path = 'lrf'
        elseif (path = 5)
          token_path = 'loc'
        elseif (path = 6)
          token_path = 'trn'
        endif
  
        RUN PGM=MATRIX

          FILEI MATI[1] = "@token_skims_src@\trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp"
          ; these should match inputs
          FILEO MATO[1] = "trnskm@token_period@_@token_access@_@token_path@_@token_egress@.tpp", MO=1-26,
                          NAME=ivt, iwait, xwait, wait, wacc, waux, wegr, dtime, ddist, fare, boards,
                               ivtLOC,  ivtLRF,  ivtEXP,  ivtHVY,  ivtCOM,  ivtFerry,  ivtMUNILoc, ivtMUNIMet,
                               distLOC, distLRF, distEXP, distHVY, distCOM, distFerry, firstMode

          FILLMW MW[1] = MI.1.1(26) ; copy all of them from MATI to MW

          ; Override: set fare to zero
          MW[10] = 0

;*******************************************************************************
; implementing LMZ's FBD example here

              MW[1 ] =MI.1.ivt      
              MW[2 ] =MI.1.iwait    
              MW[3 ] =MI.1.xwait   
              MW[4 ] =MI.1.wait   
              MW[5 ] =MI.1.wacc   
              MW[6 ] =MI.1.waux   
              MW[7 ] =MI.1.wegr   
              MW[8 ] =MI.1.dtime   
              MW[9 ] =MI.1.ddist   
              MW[10] =MI.1.fare   
              MW[11] =MI.1.boards  
              MW[12] =MI.1.ivtLOC   
              MW[13] =MI.1.ivtLRF   
              MW[14] =MI.1.ivtEXP   
              MW[15] =MI.1.ivtHVY   
              MW[16] =MI.1.ivtCOM   
              MW[17] =MI.1.ivtFerry 
              MW[18] =MI.1.ivtMUNILoc
              MW[19] =MI.1.ivtMUNIMet
              MW[20] =MI.1.distLOC  
              MW[21] =MI.1.distLRF  
              MW[22] =MI.1.distEXP  
              MW[23] =MI.1.distHVY  
              MW[24] =MI.1.distCOM  
              MW[25] =MI.1.distFerry
              MW[26] =MI.1.firstMode
            ; integrated fares
              ; => calculate non-loc IVT
              MW[50] = MW[17] + MW[14] + MW[15] + MW[16] ; ivtFerry + ivtEXP + ivtHVY + ivtCOM
              ; => calculate dist
              MW[51] = MW[20] + MW[21] + MW[22] + MW[23] + MW[24]

              ; local/LRT IVT only => flat fare of $2.50 (2019$) = $1.55 ($2000)
              if ((MW[12]+MW[13] > 0) & (MW[50] = 0))
                 MW[10] = 155
              ELSEIF ((MW[51] >    0) & (MW[51] <= 1000))
                 ; $3.50 (2019$) = $2.17 ($2000)
                 MW[10] = 217
              ELSEIF ((MW[51] > 1000) & (MW[51] <= 2000))
                 ; $4.50 (2019$) = $2.80 ($2000)
                 MW[10] = 280
              ELSEIF ((MW[51] > 2000) & (MW[51] <= 3000))
                 ; $5.50 (2019$) = $3.42 ($2000)
                 MW[10] = 342
              ELSEIF ((MW[51] > 3000) & (MW[51] <= 4000))
                 ; $6.50 (2019$) = $4.04 ($2000)
                 MW[10] = 404
              ELSEIF ((MW[51] > 4000) & (MW[51] <= 5000))
                 ; $7.50 (2019$) = $4.66 ($2000)
                 MW[10] = 466
              ELSEIF (MW[51] > 5000)
                 ; $8.50 (2019$) = $5.28 ($2000)
                 MW[10] = 528
              ENDIF

;*******************************************************************************


        ENDRUN
      endloop ; path
      EndDistributeMultistep
  endloop ; access/egress loop 
endloop ; time period loop
wait4files files = ctramp1.script.end,  ctramp2.script.end,  ctramp3.script.end,  ctramp4.script.end,  ctramp5.script.end,
                   ctramp6.script.end,  ctramp7.script.end,  ctramp8.script.end,  ctramp9.script.end,  ctramp10.script.end,
                   ctramp11.script.end, ctramp12.script.end, ctramp13.script.end, ctramp14.script.end, ctramp15.script.end, 
          printfiles = save, DelDistribFiles = t, CheckReturnCode = t
          

*Cluster.EXE CTRAMP 2-16 close Exit
          